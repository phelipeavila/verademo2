name: Veracode Demo - SAST
on:
  push:
    branches:
      - pipeline-scan
      - policy-scan
      - sandbox-scan

jobs:
  Build:
    name: Veracode Package
    runs-on: ubuntu-latest
    env:
      package_path: 'verascan'
      package_name: 'verademo.war'
    steps:
      - name: Checkout https://github.com/${{ github.repository }}@${{ github.ref }}
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Maeven build
        env:
          VERACODE_API_KEY_ID: ${{ secrets.VID }}
          VERACODE_API_KEY_SECRET: ${{ secrets.VKEY }}
        run: |
          curl -fsS https://tools.veracode.com/veracode-cli/install | sh
          ./veracode package --source . --output ${{env.package_path}} --trust
          
          # mv ${{env.package_path}}/${{env.package_name}} ${{env.package_path}}/package
          # https://docs.veracode.com/r/About_auto_packaging#packaged-artifacts
      - name: Upload artfacts
        uses: actions/upload-artifact@v4
        with:
          name: artfacts
          path: ${{env.package_path}}/${{env.package_name}}

  Veracode-SAST-Pipeline:
    if: false
    # if: github.ref == 'refs/heads/pipeline-scan'
    name: Veracode SAST Pipeline
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      fail-fast: true
    env:
      APPLICATION_NAME: Verademo-java-1
      ## POLICY_NAME: Policy-test-2
      POLICY_NAME: Veracode Recommended High
    container:
      image: veracode/pipeline-scan:latest
      options: --user root

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: artfacts
          path: .

      - name: Scan
        run: |
          ## zip -r -v ${{ vars.TARGET_FILE_PATH }} . -i '*.js' '*.html'
          java -jar /opt/veracode/pipeline-scan.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -f ${{ vars.TARGET_FILE_NAME }} -p "${{ env.APPLICATION_NAME }}" -pn "${{ env.POLICY_NAME }}"
          ## java -jar /opt/veracode/pipeline-scan.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -rp "${{ env.POLICY_NAME }}" && java -jar /opt/veracode/pipeline-scan.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -f ${{ vars.TARGET_FILE_NAME }} -p "${{ env.APPLICATION_NAME }}" --policy_file "${{ env.POLICY_NAME }}.json"
        continue-on-error: true

      - name: save filtered results file
        uses: actions/upload-artifact@v3
        with:
          name: filtered-results
          path: filtered_results.json

  Veracode-SAST-Policy:
    if: false
    # if: github.ref == 'refs/heads/policy-scan'
    name: Veracode SAST Policy
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      fail-fast: true
    env:
      APPLICATION_NAME: Verademo-java-1
    container:
      image: veracode/api-wrapper-java:latest
      options: --user root

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: artfacts
          path: .

      - name: Scan
        run: |
          ### zip -r -v ${{ vars.TARGET_FILE_PATH }} . -i '*.js' '*.html'
          java -jar /opt/veracode/api-wrapper.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -action UploadAndScan -deleteincompletescan 2 -createprofile false -appname "${{ env.APPLICATION_NAME }}" -version "${{ github.run_id }}" -filepath ${{ vars.TARGET_FILE_NAME }}
        continue-on-error: true

  Veracode-SAST-Sandbox:
    if: false
    # if: github.ref == 'refs/heads/sandbox-scan'
    name: Veracode SAST Sandbox
    runs-on: ubuntu-latest
    needs: [Build]
    strategy:
      fail-fast: true
    env:
      APPLICATION_NAME: Verademo-java-1
    container:
      image: veracode/api-wrapper-java:latest
      options: --user root

    steps:
      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: artfacts
          path: .

      - name: Scan
        run: |
          ### zip -r -v ${{ vars.TARGET_FILE_PATH }} . -i '*.js' '*.html'
          java -jar /opt/veracode/api-wrapper.jar -vid "${{ secrets.VERACODE_ID }}" -vkey "${{ secrets.VERACODE_KEY }}" -action UploadAndScan -createsandbox true -sandboxname "${{ github.ref }}" -deleteincompletescan 2  -createprofile false -appname "${{ env.APPLICATION_NAME }}" -version "${{ github.run_id }}" -filepath ${{ vars.TARGET_FILE_NAME }}
        continue-on-error: true